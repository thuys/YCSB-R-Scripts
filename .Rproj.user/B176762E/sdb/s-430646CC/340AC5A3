{
    "contents" : "assign(\"safetyMarginBeforeInterruptBefore\", 30, envir = .GlobalEnv)\nassign(\"safetyMarginBeforeInterruptAfter\", 30, envir = .GlobalEnv)\n\nassign(\"marginBeforeInterrupt\", 30, envir = .GlobalEnv)\nassign(\"marginAfterInterrupt\", 60, envir = .GlobalEnv)\n\nplotWithInterrupts = function(fileName, fileNames, plotNames, timeFrame, labels, plotDir, interruptPoints, interruptLabels){\n  data <- list();\n  rawData <- list();\n  for(i in 1:length(fileNames)){\n    returnValue = parseInput(sub(\"%1\", fileNames[i], fileName), timeFrame)\n    data[[i]] <- returnValue\n    rawData[[i]] <- returnValue$raw\n    \n    minY = 0\n    #minY = min(rawData[[i]][, labels], na.rm = TRUE)\n    maxY = max(rawData[[i]][(sToRemove*timeFrame/1000):nrow(rawData[[i]]), labels], na.rm = TRUE)\n    \n    png(filename=paste(plotDir, \"/single-graph-\",fileNames[i], \".png\", sep=\"\"), width=figureWidth, height=figureHeight, units=\"px\")\n    plotSingleData(rawData[[i]][1:(nrow(rawData[[i]])-safetyMarginBeforeInterruptBefore),], labels, \n                   paste(\"Plot of\", plotNames[i])\n                   , sToRemove, data[[i]]$runTime/1000, minY, 1.5*maxY)\n    for(interruptPoint in interruptPoints){\n      abline(v = interruptPoint, col = \"blue\")\n    }\n    dev.off(); \n    \n    interruptedData <- list()\n    interruptedPlotNames <- c();\n    previousRecord <- 1\n    minX = 1\n    maxX = NA\n    \n    for(interruptIndex in 1:length(interruptPoints)){\n      previousRecordWithBeforeMargin <- previousRecord + safetyMarginBeforeInterruptAfter\n      nextRecord <- interruptPoints[interruptIndex]\n      nextRecordWithAfterMargin <- nextRecord - safetyMarginBeforeInterruptBefore\n      \n      interruptedData[[interruptIndex]] <- rawData[[i]][previousRecordWithBeforeMargin:nextRecordWithAfterMargin,]\n      nbOfElements <- nextRecordWithAfterMargin-previousRecordWithBeforeMargin\n      maxX = max(nbOfElements, maxX, na.rm = TRUE)\n      interruptedPlotNames[interruptIndex] <- paste(interruptLabels[1+2*(interruptIndex-1)], \"(\", previousRecordWithBeforeMargin, \"->\", nextRecordWithAfterMargin, \")\")\n      rownames(interruptedData[[interruptIndex]]) <- seq(0, nbOfElements*timeFrame/1000, timeFrame/1000)\n      \n      previousRecord <-nextRecord\n      \n      \n    }\n    \n    previousRecordWithBeforeMargin <- previousRecord + safetyMarginBeforeInterruptAfter\n    nextRecord <- nrow(rawData[[i]])\n    nextRecordWithAfterMargin <- nextRecord - safetyMarginBeforeInterruptBefore\n    \n    interruptedData[[interruptIndex+1]] <- rawData[[i]][previousRecord:nextRecordWithAfterMargin,]\n    nbOfElements <- nextRecordWithAfterMargin-previousRecord\n    maxX = max(nbOfElements, maxX, na.rm = TRUE)\n    interruptedPlotNames[interruptIndex+1] <- paste(interruptLabels[1+2*(interruptIndex)], \"(\", previousRecordWithBeforeMargin, \"->\", nextRecordWithAfterMargin, \")\")\n    rownames(interruptedData[[interruptIndex+1]]) <- seq(0, nbOfElements*timeFrame/1000, timeFrame/1000)\n    \n    for(label in labels){\n      minY = 0\n      maxY = NA\n\n      for(maxIndex in 1:length(interruptedData)){\n        maxY = max(maxY, max(interruptedData[[maxIndex]][(sToRemove*timeFrame/1000):nrow(interruptedData[[maxIndex]]), label], na.rm = TRUE), na.rm = TRUE)\n      }\n      png(filename=paste(plotDir, \"/multiple-graph-\", plotNames[i], \"-\" ,label, \".png\", sep=\"\"), width=figureWidth, height=figureHeight, units=\"px\")\n      plotMultipleDataSingleLabel(interruptedData, label, interruptedPlotNames, \n                                  paste(\"Plot of\", label, \"for\", plotNames[i], \"between interrupt moments.\")\n                                  , sToRemove, maxX, minY, 1.5*maxY)\n      \n      dev.off(); \n    }\n  \n  \n    \n    ## Now around an interrupt point\n    interruptedData <- list()\n    \n    for(interruptIndex in 1:length(interruptPoints)){\n      record <- interruptPoints[interruptIndex]\n      startIndex <- record - marginBeforeInterrupt\n      \n      endIndex <- record + marginAfterInterrupt \n      \n      interruptedData[[interruptIndex]] <- rawData[[i]][startIndex:endIndex,]\n      nbOfElements <- endIndex-startIndex\n      minY = 0;\n      maxY = NA;\n      for(label in labels){\n          maxY = max(maxY, max(interruptedData[[interruptIndex]][,label], na.rm = TRUE), na.rm = TRUE)\n      }\n      png(filename=paste(plotDir, \"/multiple-graph-interrupt-\", plotNames[i], \"-\", interruptLabels[2*(interruptIndex)], \".png\", sep=\"\"), width=figureWidth, height=figureHeight, units=\"px\")\n      plotSingleData(interruptedData[[interruptIndex]], labels, \n                     paste(\"Plot of\", plotNames[i], \"on\", interruptLabels[2*(interruptIndex)])\n                     , startIndex, endIndex, minY, 1.1*maxY)\n      abline(v = record, col = \"blue\")\n      dev.off(); \n      \n    }\n  }\n}\n\nfor(run in 3:3){\n  tryCatch({\n    plotWithInterrupts(\"D:/Schooljaar 2013-2014/Thesis/Results/postgresql/continious-%1.dat\",\n      c(\n        paste(\"1-\",run,sep=\"\"), \n        paste(\"2-\",run,sep=\"\")\n      ), \n      c(\"Node 1\", \"Node 2\"), \n      1000, \n      c(\"UPDATE\", \"READ\"), \n      paste(\"D:/Schooljaar 2013-2014/Thesis/Results/postgresql/Fig/Continious-Run-\", run, sep=\"\"), \n      c(301,601), \n      c(\"All online\", \"Shut down\", \"One offline\", \"Power on\", \"All online\")\n    )\n  },error = function(e) print(paste(\"Problem in postgresql continious run\", run, e))\n  )\n}\n\nfor(run in 3:3){\n  tryCatch({\n    plotWithInterrupts(\"D:/Schooljaar 2013-2014/Thesis/Results/hbase/continious-%1.dat\",\n                       c(\n                         paste(\"2-\",run,sep=\"\"), \n                         paste(\"3-\",run,sep=\"\"),\n                         paste(\"5-\",run,sep=\"\")\n                       ), \n                       c(\"Node 2\", \"Node 3\", \"Node 5\"), \n                       1000, \n                       c(\"UPDATE\", \"READ\"), \n                       paste(\"D:/Schooljaar 2013-2014/Thesis/Results/hbase/Fig/Continious-Run-\", run, sep=\"\"), \n                       c(301,601), \n                       c(\"All online\", \"Shut down\", \"One offline\", \"Power on\", \"All online\")\n                       \n    )\n  },error = function(e) print(paste(\"Problem in hbase continious run\", run, e))\n  )\n}\n\nfor(run in 3:3){\n  tryCatch({\n    plotWithInterrupts(\"D:/Schooljaar 2013-2014/Thesis/Results/mongodb/continious-%1.dat\",\n                       c(\n                         paste(\"1-\",run,sep=\"\"), \n                         paste(\"2-\",run,sep=\"\"),\n                         paste(\"3-\",run,sep=\"\")\n                       ), \n                       c(\"Node 1\", \"Node 2\", \"Node 3\"), \n                       1000, \n                       c(\"UPDATE\", \"READ\"), \n                       paste(\"D:/Schooljaar 2013-2014/Thesis/Results/mongodb/Fig/Continious-Run-\", run, sep=\"\"), \n                       c(301,601), \n                       c(\"All online\", \"Shut down\", \"One offline\", \"Power on\", \"All online\")\n                       \n    )\n  },error = function(e) print(paste(\"Problem in mongodb continious run\", run, e))\n  )\n}",
    "created" : 1393765260000.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2794435161",
    "id" : "340AC5A3",
    "lastKnownWriteTime" : 1394123825,
    "path" : "~/Schooljaar 2013-2014/Thesis/R/plot.R",
    "project_path" : "plot.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}