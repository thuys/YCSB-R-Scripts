{
    "contents" : "# x: the vector\n# n: the number of samples\n# centered: if FALSE, then average current sample and previous (n-1) samples\n#           if TRUE, then average symmetrically in past and future. (If n is even, use one more sample from future.)\nmovingAverage <- function(x, n=1, centered=FALSE) {\n  \n  if (centered) {\n    before <- floor  ((n-1)/2)\n    after  <- ceiling((n-1)/2)\n  } else {\n    before <- n-1\n    after  <- 0\n  }\n  \n  # Track the sum and count of number of non-NA items\n  s     <- rep(0, length(x))\n  count <- rep(0, length(x))\n  \n  # Add the centered data \n  new <- x\n  # Add to count list wherever there isn't a \n  count <- count + !is.na(new)\n  # Now replace NA_s with 0_s and add to total\n  new[is.na(new)] <- 0\n  s <- s + new\n  \n  # Add the data from before\n  i <- 1\n  while (i <= before) {\n    # This is the vector with offset values to add\n    new   <- c(rep(NA, i), x[1:(length(x)-i)])\n    \n    count <- count + !is.na(new)\n    new[is.na(new)] <- 0\n    s <- s + new\n    \n    i <- i+1\n  }\n  \n  # Add the data from after\n  i <- 1\n  while (i <= after) {\n    # This is the vector with offset values to add\n    new   <- c(x[(i+1):length(x)], rep(NA, i))\n    \n    count <- count + !is.na(new)\n    new[is.na(new)] <- 0\n    s <- s + new\n    \n    i <- i+1\n  }\n  \n  # return sum divided by count\n  s/count\n}",
    "created" : 1392740125411.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3128818177",
    "id" : "2145CA8B",
    "lastKnownWriteTime" : 1393842574,
    "path" : "~/Schooljaar 2013-2014/Thesis/R/includes.R",
    "project_path" : "includes.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}